name: pipeline

on:
  pull_request:
    branches: [ v*/develop, master ]

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  sanity-test-build:
    runs-on: [ self-hosted ]
    # TODO: inject using secret
    container: amr-registry.caas.intel.com/isecl/iseclbuilder:v5.0.0

    steps:  
      - uses: actions/checkout@v2

      - name: Add Running Label
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.setLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: [':arrows_counterclockwise:']
            })

      - name: Check-linting-issues
        run: |
          gofmt -l .
          if [ "$(gofmt -l . | wc -l)"  -gt 0 ]; then exit 1; fi

      - name: Run-unit-tests
        id: coverage-percent
        shell: bash
        run: |
          make test
          value=`go tool cover -func cover.out | grep total | awk '{print $3}'`
          echo "::set-output name=coverage::$value"
          echo $value

      - name: Add Coverage Label
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v2
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.setLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['COV: ${{steps.coverage-percent.outputs.coverage}}']
            })

      - name: Build-cms
        run: make cms-installer

      - name: Build-authservice
        run: make authservice-installer

      - name: Build-hvs
        run: make hvs-installer

      - name: Build-ihub
        run: make ihub-installer

      - name: Build-wpm
        run: make wpm-installer

      - name: Build-wls
        run: make wls-installer

      - name: Build-kbs
        run: make kbs-installer

      - name: Build-tagent
        run: make tagent-installer

      - name: Build-wlagent
        run: make wlagent-installer

      - name: Build-admission-controller
        run: make admission-controller

      - name: Build-k8s-controller
        run: make isecl-k8s-controller

      - name: Build-k8s-scheduler
        run: make isecl-k8s-scheduler
